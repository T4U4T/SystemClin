
# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer


from pathlib import Path

import sqlite3

# from tkinter import *
# Explicit imports to satisfy Flake8
from tkinter import Tk, Canvas, Entry, Text, Button, PhotoImage, Frame, Label,  Radiobutton, IntVar, messagebox


OUTPUT_PATH = Path(__file__).parent
ASSETS_PATH = OUTPUT_PATH / Path(r"C:\Users\thaua\OneDrive\Documents\Faculdade\TRABALHO DE EXTENÇÃO\System\GUIs\BASE\build\assets\frame0")

dashboard_path = OUTPUT_PATH / Path(r"C:\Users\thaua\OneDrive\Documents\Faculdade\TRABALHO DE EXTENÃO\System\GUIs\HomeDashboard\build\assets\frame0")
caduser_path = OUTPUT_PATH / Path(r"C:\Users\thaua\OneDrive\Documents\Faculdade\TRABALHO DE EXTENÃO\System\GUIs\Cad_User\build\assets\frame0")
avalpaci_path = OUTPUT_PATH / Path(r"C:\Users\thaua\OneDrive\Documents\Faculdade\TRABALHO DE EXTENÃO\System\GUIs\Aval_Paci\build\assets\frame0")

def criar_tabela():
    conn = sqlite3.connect("clinica.db")
    cursor = conn.cursor()

    cursor.execute('''CREATE TABLE IF NOT EXISTS consulta (
                        id INTEGER PRIMARY KEY AUTOINCREMENT,
                        nome_completo TEXT,
                        idade INTEGER,
                        sexo TEXT,
                        data_nasc TEXT,
                        estado_civil TEXT,
                        telefone TEXT,
                        email TEXT,
                        nome_contato TEXT,
                        telefone_contato TEXT,
                        medico TEXT,
                        telefone_medico TEXT,
                        hospital TEXT,
                        pressao_arterial TEXT,
                        frequencia_cardiaca TEXT,
                        temperatura REAL,
                        peso REAL,
                        altura REAL,
                        data_cirurgia TEXT,
                        diabetes INTEGER,
                        hipertensao INTEGER,
                        tabagismo INTEGER,
                        cirurgias INTEGER,
                        antecedentes_alergicos INTEGER,
                        antecedentes_oncologicos INTEGER,
                        ingere_alcool INTEGER,
                        usa_anticoncepcional INTEGER,
                        ciclo_menstrual INTEGER,
                        gestante INTEGER,
                        tratamento_medico INTEGER,
                        marca_passo INTEGER,
                        observacoes TEXT)''')

    conn.commit()
    conn.close()


def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH / Path(path)

def relative_to_dashboard(path: str) -> Path:
    return dashboard_path / Path(path)

def relative_to_caduser(path: str) -> Path:
    return caduser_path / Path(path)

def relative_to_avalpaci(path: str) -> Path:
    return avalpaci_path / Path(path)

def DASHBOARD():
    frame = Frame(window)
    frame.place(x=436, y=155, width=1473, height=865, anchor="nw")

    canvas = Canvas(
        frame,
        bg = "#2B5746",
        height = 865,
        width = 1473,
        bd = 0,
        highlightthickness = 0,
        relief = "ridge"
    )

    canvas.place(x = 0, y = 0)

    canvas.create_rectangle(38, 100, 438, 200, fill="#4E7163", outline="")

    canvas.create_rectangle(38, 220, 438, 320, fill="#4E7163", outline="")

    canvas.create_rectangle(38, 340, 438, 440, fill="#4E7163", outline="")
    
    canvas.create_rectangle(38, 460, 438, 760, fill="#4E7163", outline="")

    
    
    canvas.create_text(230, 142, text="0000", fill="white", font=("Inter Bold", 25 * -1))
    canvas.create_text(230, 172, text="Pacientes Cadastrados", fill="white", font=("Inter regular", 17 * -1))

    canvas.create_text(230, 256, text="0000", fill="white", font=("Inter Bold", 25 * -1))
    canvas.create_text(230, 281, text="Agendamentos Hoje", fill="white", font=("Inter regular", 17 * -1))

    canvas.create_text(230, 376, text="0000", fill="white", font=("Inter Bold", 25 * -1))
    canvas.create_text(230, 405, text="Médicos Cadastrados", fill="white", font=("Inter regular", 17 * -1))

    
def CAD_USER():
    frame = Frame(window)
    frame.place(x=436, y=155, width=1473, height=865, anchor="nw")

    canvas = Canvas(
        frame,
        bg="#2B5746",
        height=865,
        width=1473,
        bd=0,
        highlightthickness=0,
        relief="ridge"
    )
    canvas.place(x=0, y=0)

    # Retângulo principal
    quadrado = canvas.create_rectangle(141, 155, 1332, 355, fill="#2B5746", outline="black", width=2)

    # Caixa de título
    canvas.create_rectangle(156, 150, 282, 170, fill="#2B5746", outline="")
    canvas.create_text(220, 150, text="Dados do Usuário", fill="white", font=("Inter Bold", 13 * -1))

    # Títulos dos campos
    Label(frame, text="Nome do Usuário", fg="white", bg="#2B5746", font=("Inter Bold", 12)).place(x=160, y=210)
    Label(frame, text="Área", fg="white", bg="#2B5746", font=("Inter Bold", 12)).place(x=480, y=210)
    Label(frame, text="Telefone", fg="white", bg="#2B5746", font=("Inter Bold", 12)).place(x=650, y=210)
    Label(frame, text="E-mail", fg="white", bg="#2B5746", font=("Inter Bold", 12)).place(x=820, y=210)
    Label(frame, text="Status", fg="white", bg="#2B5746", font=("Inter Bold", 12)).place(x=1140, y=210)

    # Campos de entrada (Entry)
    nome_do_usuario = Entry(frame, bd=0, bg="#4E7163", fg="#FFFFFF", highlightthickness=0)
    area = Entry(frame, bd=0, bg="#4E7163", fg="#FFFFFF", highlightthickness=0)
    telefone = Entry(frame, bd=0, bg="#4E7163", fg="#FFFFFF", highlightthickness=0)
    email = Entry(frame, bd=0, bg="#4E7163", fg="#FFFFFF", highlightthickness=0)
    status = Entry(frame, bd=0, bg="#4E7163", fg="#FFFFFF", highlightthickness=0)

    # Posicionar os campos de entrada abaixo dos títulos
    nome_do_usuario.place(x=160, y=240, width=300, height=30)  
    area.place(x=480, y=240, width=150, height=30)
    telefone.place(x=650, y=240, width=150, height=30)
    email.place(x=820, y=240, width=300, height=30)
    status.place(x=1140, y=240, width=150, height=30)


    btn_cadastrar = Button(frame, text="Cadastrar", bg="#4E7163", fg="white", borderwidth=0, cursor="hand2", font=("Inter Bold", 12))
    btn_cadastrar.place(x=650, y=672, width=300, height=30)


def salvar_atendimento(dados):
    conn = sqlite3.connect("clinica.db")
    cursor = conn.cursor()

    # Inserir os dados na tabela
    cursor.execute('''INSERT INTO consulta (nome_completo, idade, sexo, data_nasc, estado_civil, telefone, email,
                       nome_contato, telefone_contato, medico, telefone_medico, hospital, pressao_arterial,
                       frequencia_cardiaca, temperatura, peso, altura, data_cirurgia, diabetes, hipertensao, tabagismo,
                       cirurgias, antecedentes_alergicos, antecedentes_oncologicos, ingere_alcool, usa_anticoncepcional,
                       ciclo_menstrual, gestante, tratamento_medico, marca_passo, observacoes)
                       VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)''', dados)

    conn.commit()
    conn.close()

    messagebox.showinfo("Sucesso", "Atendimento salvo com sucesso!")

def CONSULTA():
    frame = Frame(window, bg="#2B5746")
    frame.place(x=436, y=155, width=1473, height=865, anchor="nw")

    # Seção de Dados Pessoais
    Label(frame, text="Dados Pessoais", fg="white", bg="#2B5746", font=("Inter Bold", 14)).place(x=60, y=30)
    
    Label(frame, text="Nome Completo", fg="white", bg="#2B5746", font=("Inter Bold", 12)).place(x=60, y=70)
    nome_completo = Entry(frame, bd=0, bg="#4E7163", fg="#FFFFFF", highlightthickness=0)
    nome_completo.place(x=60, y=100, width=500, height=30)

    Label(frame, text="Idade", fg="white", bg="#2B5746", font=("Inter Bold", 12)).place(x=580, y=70)
    idade = Entry(frame, bd=0, bg="#4E7163", fg="#FFFFFF", highlightthickness=0)
    idade.place(x=580, y=100, width=100, height=30)

    Label(frame, text="Sexo", fg="white", bg="#2B5746", font=("Inter Bold", 12)).place(x=700, y=70)
    sexo = Entry(frame, bd=0, bg="#4E7163", fg="#FFFFFF", highlightthickness=0)
    sexo.place(x=700, y=100, width=100, height=30)

    Label(frame, text="Data de Nascimento", fg="white", bg="#2B5746", font=("Inter Bold", 12)).place(x=820, y=70)
    data_nasc = Entry(frame, bd=0, bg="#4E7163", fg="#FFFFFF", highlightthickness=0)
    data_nasc.place(x=820, y=100, width=150, height=30)

    Label(frame, text="Estado Civil", fg="white", bg="#2B5746", font=("Inter Bold", 12)).place(x=990, y=70)
    estado_civil = Entry(frame, bd=0, bg="#4E7163", fg="#FFFFFF", highlightthickness=0)
    estado_civil.place(x=990, y=100, width=150, height=30)

    Label(frame, text="Telefone", fg="white", bg="#2B5746", font=("Inter Bold", 12)).place(x=1150, y=70)
    telefone = Entry(frame, bd=0, bg="#4E7163", fg="#FFFFFF", highlightthickness=0)
    telefone.place(x=1150, y=100, width=150, height=30)

    Label(frame, text="E-mail", fg="white", bg="#2B5746", font=("Inter Bold", 12)).place(x=60, y=150)
    email = Entry(frame, bd=0, bg="#4E7163", fg="#FFFFFF", highlightthickness=0)
    email.place(x=60, y=180, width=500, height=30)

    # Seção de Dados de Emergência
    Label(frame, text="Dados de Emergência", fg="white", bg="#2B5746", font=("Inter Bold", 14)).place(x=60, y=230)
    
    Label(frame, text="Nome do Contato", fg="white", bg="#2B5746", font=("Inter Bold", 12)).place(x=60, y=270)
    nome_contato = Entry(frame, bd=0, bg="#4E7163", fg="#FFFFFF", highlightthickness=0)
    nome_contato.place(x=60, y=300, width=500, height=30)

    Label(frame, text="Telefone", fg="white", bg="#2B5746", font=("Inter Bold", 12)).place(x=580, y=270)
    telefone_contato = Entry(frame, bd=0, bg="#4E7163", fg="#FFFFFF", highlightthickness=0)
    telefone_contato.place(x=580, y=300, width=200, height=30)

    Label(frame, text="Médico", fg="white", bg="#2B5746", font=("Inter Bold", 12)).place(x=800, y=270)
    medico = Entry(frame, bd=0, bg="#4E7163", fg="#FFFFFF", highlightthickness=0)
    medico.place(x=800, y=300, width=250, height=30)

    Label(frame, text="Telefone do Médico", fg="white", bg="#2B5746", font=("Inter Bold", 12)).place(x=1070, y=270)
    telefone_medico = Entry(frame, bd=0, bg="#4E7163", fg="#FFFFFF", highlightthickness=0)
    telefone_medico.place(x=1070, y=300, width=200, height=30)

    Label(frame, text="Hospital", fg="white", bg="#2B5746", font=("Inter Bold", 12)).place(x=60, y=350)
    hospital = Entry(frame, bd=0, bg="#4E7163", fg="#FFFFFF", highlightthickness=0)
    hospital.place(x=60, y=380, width=500, height=30)

    # Seção de Dados de Avaliação do Paciente
    Label(frame, text="Dados de Avaliação do Paciente", fg="white", bg="#2B5746", font=("Inter Bold", 14)).place(x=60, y=430)

    Label(frame, text="Pressão Arterial", fg="white", bg="#2B5746", font=("Inter Bold", 12)).place(x=60, y=470)
    pressao_arterial = Entry(frame, bd=0, bg="#4E7163", fg="#FFFFFF", highlightthickness=0)
    pressao_arterial.place(x=60, y=500, width=150, height=30)

    Label(frame, text="Frequência Cardíaca", fg="white", bg="#2B5746", font=("Inter Bold", 12)).place(x=230, y=470)
    frequencia_cardiaca = Entry(frame, bd=0, bg="#4E7163", fg="#FFFFFF", highlightthickness=0)
    frequencia_cardiaca.place(x=230, y=500, width=150, height=30)

    Label(frame, text="Temperatura", fg="white", bg="#2B5746", font=("Inter Bold", 12)).place(x=400, y=470)
    temperatura = Entry(frame, bd=0, bg="#4E7163", fg="#FFFFFF", highlightthickness=0)
    temperatura.place(x=400, y=500, width=100, height=30)

    Label(frame, text="Peso", fg="white", bg="#2B5746", font=("Inter Bold", 12)).place(x=510, y=470)
    peso = Entry(frame, bd=0, bg="#4E7163", fg="#FFFFFF", highlightthickness=0)
    peso.place(x=510, y=500, width=100, height=30)

    Label(frame, text="Altura", fg="white", bg="#2B5746", font=("Inter Bold", 12)).place(x=620, y=470)
    altura = Entry(frame, bd=0, bg="#4E7163", fg="#FFFFFF", highlightthickness=0)
    altura.place(x=620, y=500, width=100, height=30)

    Label(frame, text="Data da Cirurgia", fg="white", bg="#2B5746", font=("Inter Bold", 12)).place(x=730, y=470)
    data_cirurgia = Entry(frame, bd=0, bg="#4E7163", fg="#FFFFFF", highlightthickness=0)
    data_cirurgia.place(x=730, y=500, width=150, height=30)

    # Seção de Booleans (Checkboxes - Sim/Não)
    def create_boolean_field(label_text, x_pos, y_pos, var):
        Label(frame, text=label_text, fg="white", bg="#2B5746", font=("Inter Bold", 12)).place(x=x_pos, y=y_pos)
        Radiobutton(frame, text="Sim", variable=var, value=1, bg="#2B5746", fg="white").place(x=x_pos + 150, y=y_pos)
        Radiobutton(frame, text="Não", variable=var, value=0, bg="#2B5746", fg="white").place(x=x_pos + 200, y=y_pos)
    
    boolean_fields = [
        "Diabetes", "Hipertensão Arterial", "Tabagismo", "Cirurgias", "Antecedentes Alérgicos",
        "Antecedentes Oncológicos", "Ingere Álcool", "Usa Anticoncepcional", 
        "Ciclo Menstrual", "Gestante", "Tratamento Médico", "Marca Passo"
    ]
    
    x_base, y_base = 60, 550
    vars = [IntVar() for _ in boolean_fields]
    for i, (field, var) in enumerate(zip(boolean_fields, vars)):
        create_boolean_field(field, x_base, y_base + (i % 4) * 40, var)
        if i % 4 == 3:
            x_base += 350  # Mudar de coluna a cada 4 campos

    # Campo de observações
    Label(frame, text="Observações", fg="white", bg="#2B5746", font=("Inter Bold", 12)).place(x=60, y=720)
    observacoes = Entry(frame, bd=0, bg="#4E7163", fg="#FFFFFF", highlightthickness=0)
    observacoes.place(x=60, y=750, width=800, height=30)

    # Função para coletar os dados do formulário e salvar no banco de dados
    def coletar_dados():
        dados = (
            nome_completo.get(), idade.get(), sexo.get(), data_nasc.get(), estado_civil.get(), telefone.get(),
            email.get(), nome_contato.get(), telefone_contato.get(), medico.get(), telefone_medico.get(),
            hospital.get(), pressao_arterial.get(), frequencia_cardiaca.get(), temperatura.get(), peso.get(),
            altura.get(), data_cirurgia.get(), vars[0].get(), vars[1].get(), vars[2].get(), vars[3].get(),
            vars[4].get(), vars[5].get(), vars[6].get(), vars[7].get(), vars[8].get(), vars[9].get(), vars[10].get(),
            vars[11].get(), observacoes.get()
        )
        salvar_atendimento(dados)

    # Botões
    Button(frame, text="Finalizar Atendimento", command=coletar_dados, bg="#4E7163", fg="white").place(x=1050, y=750, width=200, height=40)
    Button(frame, text="Cancelar Atendimento", bg="#4E7163", fg="white").place(x=1270, y=750, width=200, height=40)




window = Tk()

window.geometry("1919x1030")
window.configure(bg = "#FFFFFF")

criar_tabela()


canvas = Canvas(
    window,
    bg = "#FFFFFF",
    height = 1030,
    width = 1919,
    bd = 0,
    highlightthickness = 0,
    relief = "ridge"
)

canvas.place(x = 0, y = 0)
canvas.create_rectangle(
    424.0,
    0.0,
    1920.0,
    1030.0,
    fill="#4E7163",
    outline="")

canvas.create_rectangle(
    436.0,
    155.0,
    1909.0,
    1020.0,
    fill="#2B5746",
    outline="")

image_image_1 = PhotoImage(
    file=relative_to_assets("image_1.png"))
image_1 = canvas.create_image(
    212.0,
    515.0,
    image=image_image_1
)

image_image_2 = PhotoImage(
    file=relative_to_assets("image_2.png"))
image_2 = canvas.create_image(
    208.0,
    162.0,
    image=image_image_2
)

button_image_1 = PhotoImage(
    file=relative_to_assets("button_1.png"))
button_1 = Button(
    image=button_image_1,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: print("button_1 clicked"),
    relief="flat"
)
button_1.place(
    x=1798.0,
    y=59.0,
    width=81.0,
    height=35.0
)

button_image_2 = PhotoImage(
    file=relative_to_assets("button_2.png"))
button_2 = Button(
    image=button_image_2,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: CAD_USER(),
    relief="flat"
)
button_2.place(
    x=0.0,
    y=874.0,
    width=424.0,
    height=66.0
)

button_image_3 = PhotoImage(
    file=relative_to_assets("button_3.png"))
button_3 = Button(
    image=button_image_3,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: print("button_3 clicked"),
    relief="flat"
)
button_3.place(
    x=0.0,
    y=799.0,
    width=424.0,
    height=66.0
)

button_image_4 = PhotoImage(
    file=relative_to_assets("button_4.png"))
button_4 = Button(
    image=button_image_4,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: CONSULTA(),
    relief="flat"
)
button_4.place(
    x=0.0,
    y=724.0,
    width=424.0,
    height=66.0
)

button_image_5 = PhotoImage(
    file=relative_to_assets("button_5.png"))
button_5 = Button(
    image=button_image_5,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: print("button_5 clicked"),
    relief="flat"
)
button_5.place(
    x=0.0,
    y=649.0,
    width=424.0,
    height=66.0
)

button_image_6 = PhotoImage(
    file=relative_to_assets("button_6.png"))
button_6 = Button(
    image=button_image_6,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: print("button_6 clicked"),
    relief="flat"
)
button_6.place(
    x=0.0,
    y=574.0,
    width=424.0,
    height=66.0
)

button_image_7 = PhotoImage(
    file=relative_to_assets("button_7.png"))
button_7 = Button(
    image=button_image_7,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: print("button_7 clicked"),
    relief="flat"
)
button_7.place(
    x=0.0,
    y=499.0,
    width=424.0,
    height=66.0
)

button_image_8 = PhotoImage(
    file=relative_to_assets("button_8.png"))
button_8 = Button(
    image=button_image_8,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: DASHBOARD(),
    relief="flat"
)
button_8.place(
    x=0.0,
    y=424.0,
    width=424.0,
    height=66.0
)
window.resizable(True, True)
window.mainloop()
